<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/04/19/hello-world/"/>
      <url>/2023/04/19/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Blog迁移到Github纪念日</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP代码审计神器——RIPS个人汉化版</title>
      <link href="/2018/04/10/PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%A5%9E%E5%99%A8%E2%80%94%E2%80%94RIPS%E4%B8%AA%E4%BA%BA%E6%B1%89%E5%8C%96%E7%89%88/"/>
      <url>/2018/04/10/PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%A5%9E%E5%99%A8%E2%80%94%E2%80%94RIPS%E4%B8%AA%E4%BA%BA%E6%B1%89%E5%8C%96%E7%89%88/</url>
      
        <content type="html"><![CDATA[<h2 id="一、RIPS简介"><a href="#一、RIPS简介" class="headerlink" title="一、RIPS简介"></a>一、RIPS简介</h2><p>RIPS是一款PHP开发的开源的PHP代码审计工具，由国外的安全研究者Johannes Dahse开发，目前开源的最新版本是0.55。</p><p>程序小巧玲珑，仅有不到500kb，其中的PHP语法分析非常精准，可以实现跨文件变量和函数追踪，误报率较低。并有拥有简单易懂的用户界面，因此被许多安全研究人员钟爱，因此RIPS可谓是PHP代码审计之利器。</p><p>RIPS项目的官网为<a href="http://rips-scanner.sourceforge.net/">http://rips-scanner.sourceforge.net/</a><br>和 <a href="https://www.ripstech.com/">https://www.ripstech.com/</a><br>大家如果有兴趣可以自行了解</p><p>目前RIPS的免费开源版本已停止了程序更新，但官方目前给出了下个版本的说明<br><img src="https://img2020.cnblogs.com/blog/1771833/202112/1771833-20211220162408562-952994260.png" alt="image"><br>简而言之就是官方想对程序的扫描精度，功能上进行了更进一步地拓展和升级，但神秘的作者也并没有告知我们下个版本的推送日期，所以我这次带来的是个人汉化版的RIPS—0.55版本。</p><p>个人汉化后的如图所示<br><img src="https://img2020.cnblogs.com/blog/1771833/202112/1771833-20211220162645638-1306441565.png" alt="image"><br><img src="https://img2020.cnblogs.com/blog/1771833/202112/1771833-20211220162707763-1167124696.png" alt="image"></p><p>emmm<del>!看了以后是不是非常心动了？心动不如行动，快点来下载和使用吧<br>部分地方汉化不全，还请各位大佬们海涵</del><br>下载地址见文末</p><p>二、RIPS安装环境<br>RIPS是基于PHP进行编写的，那么成功地运行RIPS便一定需要PHP环境的支持，在此我比较推荐使用PHPStudy这款程序来进行本地PHP环境安全<br>PHPstudy下载链接:<a href="http://phpstudy.php.cn/">http://phpstudy.php.cn/</a><br>安装后界面如图所示:<br><img src="https://img2020.cnblogs.com/blog/1771833/202112/1771833-20211220162920171-561206186.png" alt="image"></p><p>下载RIPS后将其解压放入PHPstduy的根目录下即可使用（无需进行任何数据库配置）<br><img src="https://img2020.cnblogs.com/blog/1771833/202112/1771833-20211220163001434-1806720391.png" alt="image"></p><p>如图为RIPS安装成功后的界面<br><img src="https://img2020.cnblogs.com/blog/1771833/202112/1771833-20211220163008873-1047344751.png" alt="image"></p><h2 id="三、RIPS使用方法"><a href="#三、RIPS使用方法" class="headerlink" title="三、RIPS使用方法"></a>三、RIPS使用方法</h2><p>在程序的顶部”源码的绝对路径”文本框中输入你想要扫描的项目的绝对路径(如F:&#x2F;&#x2F;person&#x2F;phpstduy&#x2F;WWW&#x2F;dedecms)<br>然后根据个人的需求来选择扫描漏洞的范围，是否扫描根目录等，最后点击扫描即可。<br><img src="https://img2020.cnblogs.com/blog/1771833/202112/1771833-20211220163018556-1482164476.png" alt="image"><br><img src="https://img2020.cnblogs.com/blog/1771833/202112/1771833-20211220163031568-110699037.png" alt="image"></p><p>扫描后即可查看扫描报告<br><img src="https://img2020.cnblogs.com/blog/1771833/202112/1771833-20211220163115967-34901708.png" alt="image"></p><h2 id="四、RIPS审计实例"><a href="#四、RIPS审计实例" class="headerlink" title="四、RIPS审计实例"></a>四、RIPS审计实例</h2><p>我们先以笔者多年前刚刚学PHP时写的垃圾程序开一下刀(拿老裤写的，你懂得)<br><img src="https://img2020.cnblogs.com/blog/1771833/202112/1771833-20211220163149383-1824425263.png" alt="image"></p><p>扫描后结果如图<br><img src="https://img2020.cnblogs.com/blog/1771833/202112/1771833-20211220163215727-1972260277.png" alt="image"></p><p>可以看到存在XSS、文件读取、PHP代码执行、HTTP header注入等漏洞，我们选择XSS和文件读取漏洞来测试一下RIPS审计的准确性。</p><h3 id="①XSS漏洞处代码如下"><a href="#①XSS漏洞处代码如下" class="headerlink" title="①XSS漏洞处代码如下"></a>①XSS漏洞处代码如下</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;-&gt;&lt;a href=\&quot;&#123;$_SERVER[&#x27;PHP_SELF&#x27;]&#125;?path=&quot; . _encode ($f[&#x27;..&#x27;]) . &quot;\&quot;&gt;上级目录      &lt;/a&gt; &quot;; </span><br><span class="line">$f = _opendir (_decode ($_GET[&#x27;path&#x27;]));  // elseif($_GET == null) else ,</span><br><span class="line">$f = _opendir (&#x27;xiaojie&#x27;);  // elseif($_GET == null),</span><br><span class="line">$f = _opendir (&#x27;xiaojie&#x27;);  // if($_GET == &#x27;..&#x27;)，</span><br></pre></td></tr></table></figure><p>可以看到该程序对f这个变量未进行过滤，直接将其输出，因此很可能存在XSS漏洞结合RIPS的漏洞说明可以知道XSS漏洞的成因及POC<br><img src="https://img2020.cnblogs.com/blog/1771833/202112/1771833-20211220164148856-2057150102.png" alt="image"></p><p>我们来测试一下<br><img src="https://img2020.cnblogs.com/blog/1771833/202112/1771833-20211220164159519-401049620.png" alt="image"></p><p>如图，我们成功地弹窗了。证明RIPS对该程序的XSS审计是很准确的。</p><h3 id="②任意文件读取处代码如下"><a href="#②任意文件读取处代码如下" class="headerlink" title="②任意文件读取处代码如下"></a>②任意文件读取处代码如下</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo echo &quot;-&gt;&lt;a href=\&quot;&#123;$_SERVER[&#x27;PHP_SELF&#x27;]&#125;?path=&quot; . _encode ($f[&#x27;..&#x27;]) . &quot;\&quot;&gt;上级目录      &lt;/a&gt; &quot;; </span><br><span class="line">$f = _opendir (_decode ($_GET[&#x27;path&#x27;]));  // elseif($_GET == null) else ,</span><br><span class="line">$f = _opendir (&#x27;xiaojie&#x27;);  // elseif($_GET == null),</span><br><span class="line">$f = _opendir (&#x27;xiaojie&#x27;);  // if($_GET == &#x27;..&#x27;),</span><br></pre></td></tr></table></figure><p>同样的，该程序未对data变量进行任何验证，直接使用file_get_contents读取文件内容<br><img src="https://img2020.cnblogs.com/blog/1771833/202112/1771833-20211220164227966-1914064606.png" alt="image"></p><p>我们来读取一个host文件测试一下<br><img src="https://img2020.cnblogs.com/blog/1771833/202112/1771833-20211220164306750-1126414839.png" alt="image"></p><p>如图，我们成功读取到了host文件的内容</p><h2 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h2><p>本篇文章介绍了国外安全研究人员开发的PHP代码审计神器——RIPS，并且提供了笔者的汉化版本，相信大家可以借助这款工具更好地进行代码审计，挖到更多CMS的漏洞。</p><h2 id="六、下载"><a href="#六、下载" class="headerlink" title="六、下载"></a>六、下载</h2><p><a href="https://github.com/J0o1ey/rips-Chinese">https://github.com/J0o1ey/rips-Chinese</a></p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP代码审计神器——RIPS个人汉化版</title>
      <link href="/2018/04/10/PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%A5%9E%E5%99%A8%E2%80%94%E2%80%94RIPS%E4%B8%AA%E4%BA%BA%E6%B1%89%E5%8C%96%E7%89%88-1/"/>
      <url>/2018/04/10/PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%A5%9E%E5%99%A8%E2%80%94%E2%80%94RIPS%E4%B8%AA%E4%BA%BA%E6%B1%89%E5%8C%96%E7%89%88-1/</url>
      
        <content type="html"><![CDATA[<h2 id="一、RIPS简介"><a href="#一、RIPS简介" class="headerlink" title="一、RIPS简介"></a>一、RIPS简介</h2><p>RIPS是一款PHP开发的开源的PHP代码审计工具，由国外的安全研究者Johannes Dahse开发，目前开源的最新版本是0.55。</p><p>程序小巧玲珑，仅有不到500kb，其中的PHP语法分析非常精准，可以实现跨文件变量和函数追踪，误报率较低。并有拥有简单易懂的用户界面，因此被许多安全研究人员钟爱，因此RIPS可谓是PHP代码审计之利器。</p><p>RIPS项目的官网为<a href="http://rips-scanner.sourceforge.net/">http://rips-scanner.sourceforge.net/</a><br>和 <a href="https://www.ripstech.com/">https://www.ripstech.com/</a><br>大家如果有兴趣可以自行了解</p><p>目前RIPS的免费开源版本已停止了程序更新，但官方目前给出了下个版本的说明<br><img src="https://s2.loli.net/2023/04/19/5BEldw4iNJIxtfO.png" alt="image"><br>简而言之就是官方想对程序的扫描精度，功能上进行了更进一步地拓展和升级，但神秘的作者也并没有告知我们下个版本的推送日期，所以我这次带来的是个人汉化版的RIPS—0.55版本。</p><p>个人汉化后的如图所示<br><img src="https://s2.loli.net/2023/04/19/DfkxF5wWYjMIv97.png" alt="image"><br><img src="https://s2.loli.net/2023/04/19/5BEldw4iNJIxtfO.png" alt="image"><br>部分地方汉化不全，还请各位大佬们海涵<br>下载地址见文末</p><h2 id="二、RIPS安装环境"><a href="#二、RIPS安装环境" class="headerlink" title="二、RIPS安装环境"></a>二、RIPS安装环境</h2><p>RIPS是基于PHP进行编写的，那么成功地运行RIPS便一定需要PHP环境的支持，在此我比较推荐使用PHPStudy这款程序来进行本地PHP环境安全<br>PHPstudy下载链接:<a href="http://phpstudy.php.cn/">http://phpstudy.php.cn/</a><br>安装后界面如图所示:<br><img src="https://s2.loli.net/2023/04/19/E9Hm2B6nMwUdrst.png" alt="image"></p><p>下载RIPS后将其解压放入PHPstduy的根目录下即可使用（无需进行任何数据库配置）<br><img src="https://s2.loli.net/2023/04/19/FkCg9BeUAzVDcJu.png" alt="image"></p><p>如图为RIPS安装成功后的界面<br><img src="https://s2.loli.net/2023/04/19/1qeawEB4OxmRr2c.png" alt="image"></p><h2 id="三、RIPS使用方法"><a href="#三、RIPS使用方法" class="headerlink" title="三、RIPS使用方法"></a>三、RIPS使用方法</h2><p>在程序的顶部”源码的绝对路径”文本框中输入你想要扫描的项目的绝对路径(如F:&#x2F;&#x2F;person&#x2F;phpstduy&#x2F;WWW&#x2F;dedecms)<br>然后根据个人的需求来选择扫描漏洞的范围，是否扫描根目录等，最后点击扫描即可。<br><img src="https://s2.loli.net/2023/04/19/ZIVGoWAEaQj6zHx.png" alt="image"><br><img src="https://s2.loli.net/2023/04/19/5iNsH2lgMS7ZAhw.png" alt="image"></p><p>扫描后即可查看扫描报告<br><img src="https://s2.loli.net/2023/04/19/HqVcEukiFl9zpwY.png" alt="image"></p><h2 id="四、RIPS审计实例"><a href="#四、RIPS审计实例" class="headerlink" title="四、RIPS审计实例"></a>四、RIPS审计实例</h2><p>我们先以笔者多年前刚刚学PHP时写的垃圾程序开一下刀(拿老裤写的，你懂得)<br><img src="https://s2.loli.net/2023/04/19/tkVbpl9LaFjZQUm.png" alt="image"></p><p>扫描后结果如图<br><img src="https://s2.loli.net/2023/04/19/56mHoitakzhPpQ8.png" alt="image"></p><p>可以看到存在XSS、文件读取、PHP代码执行、HTTP header注入等漏洞，我们选择XSS和文件读取漏洞来测试一下RIPS审计的准确性。</p><h3 id="①XSS漏洞处代码如下"><a href="#①XSS漏洞处代码如下" class="headerlink" title="①XSS漏洞处代码如下"></a>①XSS漏洞处代码如下</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">&quot;-&gt;&lt;a href=\&quot;<span class="subst">&#123;$_SERVER[&#x27;PHP_SELF&#x27;]&#125;</span>?path=&quot;</span> . <span class="title function_ invoke__">_encode</span> (<span class="variable">$f</span>[<span class="string">&#x27;..&#x27;</span>]) . <span class="string">&quot;\&quot;&gt;上级目录      &lt;/a&gt; &quot;</span>; </span><br><span class="line"><span class="variable">$f</span> = <span class="title function_ invoke__">_opendir</span> (<span class="title function_ invoke__">_decode</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;path&#x27;</span>]));  <span class="comment">// elseif($_GET == null) else ,</span></span><br><span class="line"><span class="variable">$f</span> = <span class="title function_ invoke__">_opendir</span> (<span class="string">&#x27;xiaojie&#x27;</span>);  <span class="comment">// elseif($_GET == null),</span></span><br><span class="line"><span class="variable">$f</span> = <span class="title function_ invoke__">_opendir</span> (<span class="string">&#x27;xiaojie&#x27;</span>);  <span class="comment">// if($_GET == &#x27;..&#x27;)，</span></span><br></pre></td></tr></table></figure><p>可以看到该程序对f这个变量未进行过滤，直接将其输出，因此很可能存在XSS漏洞结合RIPS的漏洞说明可以知道XSS漏洞的成因及POC<br><img src="https://s2.loli.net/2023/04/19/yHn4dgwK9T6Mjir.png" alt="image"></p><p>我们来测试一下<br><img src="https://s2.loli.net/2023/04/19/ol3mVd7GHhz2baj.png" alt="image"></p><p>如图，我们成功地弹窗了。证明RIPS对该程序的XSS审计是很准确的。</p><h3 id="②任意文件读取处代码如下"><a href="#②任意文件读取处代码如下" class="headerlink" title="②任意文件读取处代码如下"></a>②任意文件读取处代码如下</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo echo &quot;-&gt;&lt;a href=\&quot;&#123;$_SERVER[&#x27;PHP_SELF&#x27;]&#125;?path=&quot; . _encode ($f[&#x27;..&#x27;]) . &quot;\&quot;&gt;上级目录      &lt;/a&gt; &quot;; </span><br><span class="line">$f = _opendir (_decode ($_GET[&#x27;path&#x27;]));  // elseif($_GET == null) else ,</span><br><span class="line">$f = _opendir (&#x27;xiaojie&#x27;);  // elseif($_GET == null),</span><br><span class="line">$f = _opendir (&#x27;xiaojie&#x27;);  // if($_GET == &#x27;..&#x27;),</span><br></pre></td></tr></table></figure><p>同样的，该程序未对data变量进行任何验证，直接使用file_get_contents读取文件内容<br><img src="https://s2.loli.net/2023/04/19/PsUZuoaTv5iSVJt.png" alt="image"></p><p>我们来读取一个host文件测试一下<br><img src="https://s2.loli.net/2023/04/19/nb7GANlTcWEBmsy.png" alt="image"></p><p>如图，我们成功读取到了host文件的内容</p><h2 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h2><p>本篇文章介绍了国外安全研究人员开发的PHP代码审计神器——RIPS，并且提供了笔者的汉化版本，相信大家可以借助这款工具更好地进行代码审计，挖到更多CMS的漏洞。</p><h2 id="六、下载"><a href="#六、下载" class="headerlink" title="六、下载"></a>六、下载</h2><p><a href="https://github.com/J0o1ey/rips-Chinese">https://github.com/J0o1ey/rips-Chinese</a></p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
